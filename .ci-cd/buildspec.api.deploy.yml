version: 0.2
#env:
#  secrets-manager:
#    DOCKERHUB_PASSWORD: dockerhub:password
#    DOCKERHUB_USERNAME: dockerhub:username
#env:
  #variables:
     # key: "value"
     # key: "value"
  #parameter-store:
     # key: "value"
     # key: "value"
  #secrets-manager:
     # key: secret-id:json-key:version-stage:version-id
     # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
     # - variable
     # - variable
  #git-credential-helper: yes
#batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
  #build-graph:
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    #runtime-versions:
      # name: version
      # name: version
    commands:
#       - npm install -g typescript
#       - sam --version
#       - pip install aws-sam-cli // dont need to install
       - npm install
  pre_build:
    commands:
      - aws --version
      - git --version
      - node --version
      - npm --version
      - sam --version
      - SAM_CLI_TELEMETRY=0
      - printenv
      - ls -la
      - npm run build
  build:
    commands:
      - echo Build started on `date`
      - DEPLOY_BUCKET_NAME=${DEPLOY_BUCKET_NAME:=sam-deployment-348298856763}
      - PROJECT_NAME=${PROJECT_NAME:=vitkuz}
      - LOGICAL_GROUP_NAME=${LOGICAL_GROUP_NAME:=api}
      - ENV_NAME=${ENV_NAME:=nonprod}
      - CLOUDFORMATION_TEMPLATE_PATH=${CLOUDFORMATION_TEMPLATE_PATH:=./src/functions/api-private/.aws-sam/build/template.yaml}
      - STACK_NAME=$PROJECT_NAME-$LOGICAL_GROUP_NAME-$ENV_NAME
      - |
        sam deploy -t $CLOUDFORMATION_TEMPLATE_PATH \
        --s3-bucket $DEPLOY_BUCKET_NAME \
        --stack-name $STACK_NAME \
        --force-upload \
        --no-fail-on-empty-changeset \
        --capabilities CAPABILITY_AUTO_EXPAND CAPABILITY_IAM CAPABILITY_NAMED_IAM \
        --parameter-overrides EnvName=$ENV_NAME
#      - echo Building the Docker image...
#      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
#      - REPOSITORY_URI=348298856763.dkr.ecr.us-east-1.amazonaws.com/nextjs
#      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#      - IMAGE_TAG=${COMMIT_HASH:=latest}
#      - docker build -t $REPOSITORY_URI:latest .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#       - $(aws ecr get-login --no-include-email --region us-east-1)
#       - node ./.ci-cd/deploy.js
#       - aws cloudfront create-invalidation --distribution-id E1E91ML7AYC1OO --paths "/*"
#  post_build:
#    commands:
#      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 348298856763.dkr.ecr.us-east-1.amazonaws.com
#      - docker push $REPOSITORY_URI:latest
#      - docker push $REPOSITORY_URI:$IMAGE_TAG
#      - printf '[{"name":"%s","imageUri":"%s"}]' nextjs $REPOSITORY_URI:latest > imagedefinitions.json
#      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:latest > imageDetail.json
#      - cat imagedefinitions.json
#      - cat imageDetail.json
      # - command
#reports:
  #report-name-or-arn:
    #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
#artifacts:
#  files:
#     - .aws-sam
#     - packaged-template.yaml
    # - location
  #name: $(date +%Y-%m-%d)
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - paths
